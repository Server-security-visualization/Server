package com.dca.spring.src.malware;

import com.dca.spring.config.BaseException;
import com.dca.spring.config.BaseResponse;
import com.dca.spring.src.malware.model.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import static com.dca.spring.config.BaseResponseStatus.*;

import java.awt.*;
import java.util.Map;
import java.lang.*;


@RestController
@RequestMapping("/malware")
public class MalController {
    private final MalProvider malProvider;
    private final MalService malService;

    @Autowired
    public MalController(MalProvider malProvider, MalService malService) {
        this.malProvider = malProvider;
        this.malService = malService;
    }

    /** Malware List 조회
     * [GET]
     * /malware/list
     **/
    @GetMapping("/list")
    public BaseResponse<MalListRes> MalList(){
        try{
            MalListRes malListRes = malProvider.MalListPro();
            return new BaseResponse<>(malListRes);

        } catch(BaseException exception){
            return new BaseResponse<>((exception.getStatus()));
        }
    }

    /** Malware 상세보기
     * [GET]
     * /malware/detail
     **/
    @GetMapping("/detail")
    public BaseResponse<MalDetailRes> MalDetail(@RequestBody MalDetailReq malDetailReq) throws BaseException {
        try{
            // 파일 인덱스 입력하지 않았을 때
//            if(malDetailReq.getFile_idx()== null){
//                return new BaseResponse<>(MALWARE_EMPTY_FILE_ID);
//            }
//            int fileIdx = Integer.valueOf(malDetailReq.getFile_idx()).intValue();
//            int fileIdx = Integer.parseInt(malDetailReq.getFile_idx());
            System.out.println("1");
            MalDetailRes malDetailRes = malProvider.MalDetailPro(malDetailReq.getFile_idx());
            System.out.println("7");
            return new BaseResponse<>(malDetailRes);

        } catch (BaseException exception) {
            return new BaseResponse<>((exception.getStatus()));
        }
    }
}