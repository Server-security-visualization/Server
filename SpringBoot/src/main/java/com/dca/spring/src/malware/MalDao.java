package com.dca.spring.src.malware;

import com.dca.spring.config.BaseException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;
import com.dca.spring.src.malware.model.*;

import javax.sql.DataSource;
import java.util.List;

@Repository
public class MalDao {
    private JdbcTemplate jdbcTemplate;

    @Autowired
    public void setDataSource(DataSource dataSource){
        this.jdbcTemplate = new JdbcTemplate(dataSource);
    }

    /** Malware List 조회 **/
    public List<MalList> MalListDao(){
        String getMalListQuery = "" +
                "select fd.file_idx, f.ip, f.file as file_name, fd.detection as risk,\n" +
                "       if(fd.detection = 0, '정상', fd.type) as malware_type,\n" +
                "       if(fd.detection >= 50, 1, 0) as level\n" +
                "from file_detection_table as fd\n" +
                "left join file_table as f on fd.file_idx = f.idx\n" +
                "order by f.timestamp desc;";

        List<MalList> malList = this.jdbcTemplate.query(getMalListQuery, // 리스트면 query, 리스트가 아니면 queryForObject
                (rs,rowNum) -> new MalList(
                        rs.getInt("file_idx"),
                        rs.getString("ip"),
                        rs.getString("file_name"),
                        rs.getInt("risk"),
                        rs.getString("malware_type"),
                        rs.getInt("level")
                ));

        return malList;
    }

    /** Malware 상세보기 **/
    public MalDetailRes MalDetailDao(int file_idx){
        System.out.println("3");
        String getMalDetailQuery = "" +
                "select fd.file_idx, f.ip, f.file as file_name, fd.detection as risk,\n" +
                "       if(fd.detection = 0, '정상', fd.type) as malware_type,\n" +
                "       fd.img as blobImage\n" +
                "from file_detection_table as fd\n" +
                "left join file_table as f on fd.file_idx = f.idx\n" +
                "where f.idx = ?;";
        String imageUrl = "";
        int getMalDetailParam = file_idx;
        System.out.println("3-1");
        return this.jdbcTemplate.queryForObject(getMalDetailQuery, // 리스트면 query, 리스트가 아니면 queryForObject
                (rs,rowNum) -> new MalDetailRes(
                        rs.getInt("file_idx"),
                        rs.getString("ip"),
                        rs.getString("file_name"),
                        rs.getInt("risk"),
                        rs.getString("malware_type"),
                        imageUrl
                ), getMalDetailParam);
    }
}
