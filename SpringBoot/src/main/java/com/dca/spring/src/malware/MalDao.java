package com.dca.spring.src.malware;

import com.dca.spring.config.BaseException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;
import com.dca.spring.src.malware.model.*;

import javax.sql.DataSource;
import java.sql.Blob;
import java.util.List;
import java.lang.*;

@Repository
public class MalDao {
    private JdbcTemplate jdbcTemplate;

    @Autowired
    public void setDataSource(DataSource dataSource){
        this.jdbcTemplate = new JdbcTemplate(dataSource);
    }

    /** Malware List 조회 **/
    public List<MalList> MalListDao(){
        String getMalListQuery = "" +
                "select fd.file_idx as fileIdx, f.ip, f.filename as fileName, fd.detection as risk,\n" +
                "       if(fd.detection = 0.0, '정상', fd.type) as malwareType,\n" +
                "       if(fd.detection >= 0.5, 1, 0) as level\n" +
                "from file_detection_table as fd\n" +
                "left join file_table as f on fd.file_idx = f.idx\n" +
                "order by f.timestamp desc;";

        List<MalList> malList = this.jdbcTemplate.query(getMalListQuery, // 리스트면 query, 리스트가 아니면 queryForObject
                (rs,rowNum) -> new MalList(
                        rs.getInt("fileIdx"),
                        rs.getString("ip"),
                        rs.getString("fileName"),
                        rs.getDouble("risk"),
                        rs.getString("malwareType"),
                        rs.getInt("level")
                ));

        return malList;
    }

    /** Malware Blob 이미지 조회 **/
    public Blob MalBlobImage(int fileIdx){
        String getMalBlobImageQuery = "" +
                "select fd.img as blobImage\n" +
                "from file_detection_table as fd\n" +
                "left join file_table as f on fd.file_idx = f.idx\n" +
                "where f.idx = ?;";

        return this.jdbcTemplate.queryForObject(getMalBlobImageQuery,
                (rs,rowNum) -> rs.getBlob("blobImage"), fileIdx);
    }
}
